[SCE CONFIDENTIAL DOCUMENT]
"PlayStation 2" Programmer Tool Runtime Library libpfont Version 1.2
                  Copyright (C) 2003 Sony Computer Entertainment Inc.
                                                  All Rights Reserved

                          簡易フォントライブラリ
                         ========================

 構造体
========
===========================================================================
scePFontBlock                                                      [構造体]
===========================================================================
                                             フォントデータのメモリー内表現
[構造]
        typedef struct _scePFontBlock{
                scePFontTag tag;
                scePFontBlockAttribute attr;
                float scale_x;
                float scale_y;
                short image_width;
                short image_height;
                short max_ascent;
                short max_descent;
                short max_width;
                short reserved;
                struct{
                    int character_num;
                    int image_offset;
                    int codeindex_num;
                    int codeindex_offset;
                    int codemap_num;
                    int codemap_offset;
                    int proportional_num;
                    int proportional_offset;
                    int kerning_num;
                    int kerning_offset;
                    int clut_num;
                    int clut_offset;
                }data;
        }scePFontBlock;

[メンバ]
        tag                   フォントタグ
        attr                  scePFontBlockAttributeの内容
        scale_x               出力サイズ補正値X
        scale_y               出力サイズ補正値Y
        image_width           IMAGE 1 文字 幅 pixel
        image_height          IMAGE 1 文字 高さ pixel
        max_ascent            BLOCK 内の最大 ASCENT
        max_descent           BLOCK 内の最大DESCENT
        max_width             BLOCK 内の最大 WIDTH
        reserved              予約
        character_num         文字数
        image_offset          image データの先頭へのオフセット
        codeindex_num         codeindex 数
        codeindex_offset      codeindex データの先頭へのオフセット
        codemap_num           codemap 数
        codemap_offset        codemap データの先頭へのオフセット
        proportional_num      proportional 数
        proportional_offset   proportional データの先頭へのオフセット
        kerning_num           kerning 数
        kerning_offset        kerningデータの先頭へのオフセット
        clut_num              clut エントリ数
        clut_offset           clut データの先頭へのオフセット

[解説]
        フォントデータのメモリー内表現
        「フォントファイルフォーマット」を参照して下さい。

===========================================================================
scePFontBlockAttribute                                             [構造体]
===========================================================================
                                             フォントデータのメモリー内表現
[構造]
        typedef struct _scePFontBlockAttribute{
                u_int color_mode:3;
                u_int propotional:1;
                u_int reserved:28;
        }scePFontBlockAttribute;

[メンバ]
        color_mode    TEXTUREカラーモード
        propotional   proportional形式
        reserved      予約

[解説]
        フォントデータのメモリー内表現
        「フォントファイルフォーマット」を参照して下さい。

===========================================================================
scePFontCodeIndex                                                  [構造体]
===========================================================================
                                             フォントデータのメモリー内表現
[構造]
        typedef struct _scePFontCodeIndex{
                int start_code;
                int end_code;
                int map_index;
                int chr_index;
                }scePFontCodeIndex;

[メンバ]
        start_code   先頭文字コード
        end_code     終端文字コード
        map_index    先頭map番号
        chr_index    先頭文字番号

[解説]
        フォントデータのメモリー内表現
        「フォントファイルフォーマット」を参照して下さい。

===========================================================================
scePFontControl                                                    [構造体]
===========================================================================
                                         コールバックに渡される関数テーブル
[構造]
        typedef struct _scePFontControl{
                int (* const Getc)(int fd);
                int (* const Ungetc)(int fd);
                int (* const Putc)(int fd, int chr);
                int (* const PutcX)(int fd, int chr);
                int (* const Calc)(int fd, int chr, scePFontFRect* pRect_i,
         scePFontFRect* pRect_o);
        }scePFontControl;

[メンバ]
        Getc     文字取得
                 fd        識別子
                 return    文字コード（0=終了,-1=エラー）
        Ungetc   文字の取得位置を１文字戻す
                 fd        識別子
                 return    0=成功, -1=先頭位置だった
        Putc     文字出力
                 fd        識別子
                 chr       文字コード
                 return    0=成功,-1=メモリー不足,-2=グリフが無い
        PutcX    文字出力(実際の描画はせず計算のみ)
                 fd        識別子
                 chr       文字コード
                 return    0=成功,-1=メモリー不足,-2=グリフが無い
        Calc     文字の出力矩形を計算
                 fd        識別子
                 chr       文字コード
                 pRect_i   内側の矩形を受け取る(NULL=受け取らない)
                 pRect_o   外側の矩形を受け取る(NULL=受け取らない)
                 return    0=成功,-1=メモリー不足,-2=グリフが無い

[解説]
        コールバックに渡される関数テーブル
===========================================================================
scePFontGlyph                                                      [構造体]
===========================================================================
                                             フォントデータのメモリー内表現
[構造]
        typedef struct _scePFontGlyph{
                scePFontBlock const* block;
                u_long128 const* image;
                scePFontPropotional const* prop;
                void const* kerning;
        }scePFontGlyph;

[メンバ]
        block     ブロックへのポインタ
        image     イメージへのポインタ
        prop      プロポーショナルデータへのポインタ
        kerning   予約(NULL)

[解説]
        フォントデータのメモリー内表現
        「フォントファイルフォーマット」を参照して下さい。

===========================================================================
scePFontInfo                                                       [構造体]
===========================================================================
                                             フォントデータのメモリー内表現
[構造]
        typedef struct _scePFontInfo{
                scePFontTag tag;
                char name[32];
                char comment[32];
                short max_ascent;
                short max_descent;
                short max_width;
                short reserved;
                int block_num;
                int block_offset[0];
        }scePFontInfo;

[メンバ]
        tag               フォントタグ
        name[32]          フォント名
        comment[32]       コメント
        max_ascent        フォント全体の最大 ASCENT
        max_descent       フォント全体の最大DESCENT
        max_width         フォント全体の最大 WIDTH
        reserved          予約
        block_num         ブロック数
        block_offset[0]   ブロックのオフセット

[解説]
        フォントデータのメモリー内表現
        「フォントファイルフォーマット」を参照して下さい。

===========================================================================
scePFontProportional                                               [構造体]
===========================================================================
                                             フォントデータのメモリー内表現
[構造]
        typedef struct _scePFontProportional{
                short base_x;
                short base_y;
                short l_bearing;
                short r_bearing;
                short ascent;
                short descent;
                short width;
                short kerning;
        }scePFontPropotional;

[メンバ]
        base_x      BASE POINT X値
        base_y      BASE POINT Y値
        l_bearing   L BEARING値
        r_bearing   R BEARING値
        ascent      ASCENT値
        descent     DESCENT値
        width       WIDTH値
        kerning     予約

[解説]
        フォントデータのメモリー内表現
        「フォントファイルフォーマット」を参照して下さい。

===========================================================================
scePFontRect                                                       [構造体]
===========================================================================
                                                   フォント用の矩形領域表現
[構造]
        typedef struct _scePFontFRect{
                float top;
                float bottom;
                float left;
                float right;
        }scePFontFRect;

[メンバ]
        top      上辺
        bottom   下辺
        left     左辺
        right    右辺

[解説]
        フォント用の矩形領域表現

===========================================================================
scePFontTag                                                        [構造体]
===========================================================================
                                                               フォントタグ
[構造]
        typedef struct _scePFontTag{
                u_int id;
                u_int version;
                int size;
                int reserved;
        }scePFontTag;

[メンバ]
        id         ID(0x00000000U)
        version    バージョン(0x00000000U)
        size       サイズ
        reserved   予約

[解説]
        フォントデータのメモリー内表現
        「フォントファイルフォーマット」を参照して下さい。


 関数
======
===========================================================================
scePFontAttachData                                                   [関数]
===========================================================================
                                                   フォントデータと関連づけ
[形式]
        int scePFontAttachData(
                int fd,
                u_long128 const* pData
        );

[引数]
        fd      識別子
        pData   フォントデータ（qword境界にあること）

[返り値]
        成功の場合、0を返す。
        失敗の場合、-1を返す。

[解説]
        フォントデータとの関連づけを行います。

===========================================================================
scePFontCalcCacheSize                                                [関数]
===========================================================================
                         フォント初期化に必要なメインメモリーのサイズを計算
[形式]
        size_t scePFontCalcCacheSize(
                int num
        );

[引数]
        num   キャッシュする文字数

[返り値]
        文字数分をキャッシュするのに必要なメモリーサイズ（バイト単位）

[解説]
        フォント初期化に必要なメインメモリーのサイズを計算します。
        (固定サイズのワーク+文字数*文字ワーク)

===========================================================================
scePFontCalcRect                                                     [関数]
===========================================================================
                                                       フォント出力範囲計算
[形式]
        void scePFontCalcRect(
                int fd,
                char const* str,
                scePFontFRect* pRect_i,
                scePFontFRect* pRect_o
        );

[引数]
        fd        識別子
        str       出力テストする文字列
        pRect_i   内側の矩形を受けとる変数へのポインタ
        pRect_o   外側の矩形を受けとる変数へのポインタ

[返り値]
        なし

[解説]
        フォント出力範囲をローカル座標系で計算します。
        （現在のステータスは保存されます）

===========================================================================
scePFontFlush                                                        [関数]
===========================================================================
                                                     出力途中の文字列を破棄
[形式]
        void scePFontFlush(
                int fd
        );

[引数]
        fd   識別子

[返り値]
        なし

[解説]
        出力途中の文字列を破棄し、キャッシュをクリアします。
        変形マトリクスを単位行列に、LOCATEを(0,0,0,0)に設定します。
        colorをデフォルト(1.0,1.0,1.0,1.0)に設定します。

===========================================================================
scePFontGetBlock                                                     [関数]
===========================================================================
                                                 フォントブロック情報の取得
[形式]
        scePFontBlock const* scePFontGetBlock(
                int fd, 
                int idx
        );

[引数]
        fd    識別子
        idx   ブロック番号

[返り値]
        フォントブロック情報への参照を返す。
        エラーの場合、NULLを返す。

[解説]
        関連づけられているフォントから指定ブロックへの参照を取り出します。

===========================================================================
scePFontGetColor                                                     [関数]
===========================================================================
                                                                 描画色取得
[形式]
        void scePFontGetColor(
                int fd,
                sceVu0FVECTOR* pColor
        );

[引数]
        fd       識別子
        pColor   色を受けとる変数へのポインタ

[返り値]
        なし

[解説]
        現在の描画色を取得します。

===========================================================================
scePFontGetErxEntries                                                [関数]
===========================================================================
                                                 ライブラリのエントリの取得
[形式]
        void *scePFontGetErxEntries(
                void
        );

[引数]
        なし

[返り値]
        libpfontのエントリライブラリ

[解説]
        libpfontをliberxに登録するために必要なSceErxLibraryHeader構造体へ
        のポインタを取得します。
        この関数により返されSceErxLibraryHeader構造体をliberxの
        sceErxRegisterLibraryEntries()関数に渡すことにより、スタティックリ
        ンクされたlibpfontをERXモジュールから呼び出し可能（ダイナミックリ
        ンク可能）な状態になります。また、この関数をリンクするとliberxのラ
        イブラリエントリテーブル経由でlibpfontの実装全体がリンクされること
        になります。場合によってプログラムサイズが大きくなる可能性がありま
        す。

[関連項目]
        sceErxInit()

===========================================================================
scePFontGetFontInfo                                                  [関数]
===========================================================================
                                                         フォント情報の取得
[形式]
        scePFontInfo const* scePFontGetFontInfo(
                int fd
        );

[引数]
        fd   識別子

[返り値]
        フォント情報への参照を返す。
        エラーの場合、NULLを返す。

[解説]
        関連づけられているフォント情報への参照を返します。

===========================================================================
scePFontGetFontMatrix                                                [関数]
===========================================================================
                                                       変形マトリクスを取得
[形式]
        void scePFontGetFontMatrix(
                int fd,
                sceVu0FMATRIX* pMatrix
        );

[引数]
        fd        識別子
        pMatrix   変形マトリクスを受けとる変数へのアドレス

[返り値]
        なし

[解説]
        現在の変形マトリクスを取得します。
        （中心は base_x+width/2,base_y）

===========================================================================
scePFontGetGlyph                                                     [関数]
===========================================================================
                                               指定文字コードのグリフを取得
[形式]
        int scePFontGetGlyph(
                int fd,
                int chr,
                scePFontGlyph* pGlyph
        );

[引数]
        fd       識別子
        chr      文字コード
        pGlyph   glyphデータを受けとるための変数へのポインタ。

[返り値]
        成功の場合、0を返す。
        失敗の場合、-1を返す。

[解説]
        関連づけられているフォントから指定文字コードに対応するグリフを取得
        します。

===========================================================================
scePFontGetLocate                                                    [関数]
===========================================================================
                                                               描画位置取得
[形式]
        void scePFontGetLocate(
                int fd, 
                sceVu0FVECTOR* pLocate
        );

[引数]
        fd        識別子
        pLocate   位置を受けとる変数へのポインタ

[返り値]
        なし

[解説]
        現在の描画位置を取得します。

===========================================================================
scePFontGetPitch                                                     [関数]
===========================================================================
                                                       字間（ピッチ）の取得
[形式]
        float scePFontGetPitch(
                int fd
        );

[引数]
        fd      識別子
        width   0=デフォルト 1<=固定文字幅

[返り値]
        字間（ピッチ）を返す。

[解説]
        現在の字間（ピッチ）を取得します。

===========================================================================
scePFontGetScreenMatrix                                              [関数]
===========================================================================
                                                   座標変換マトリクスを取得
[形式]
        void scePFontGetScreenMatrix(
                int fd, 
                sceVu0FMATRIX* pMatrix
        );

[引数]
        fd        識別子
        pMatrix   座標変換マトリクスを受けとる変数へのアドレス

[返り値]
        なし

[解説]
        現在の座標変換マトリクスを取得します。

===========================================================================
scePFontGetWidth                                                     [関数]
===========================================================================
                                                       計算上の文字幅を取得
[形式]
        short scePFontGetWidth(
                int fd
        );

[引数]
        fd      識別子
        width   0=デフォルト 1<=固定文字幅

[返り値]
        文字幅を返す。

[解説]
        現在の計算上の文字幅を取得します。

===========================================================================
scePFontInit                                                         [関数]
===========================================================================
                                                             フォント初期化
[形式]
        int scePFontInit(
                int num,
                u_long128* pWork
        );

[引数]
        num    キャッシュする文字数（最低１文字以上必要）
        work   キャッシュ用ワークメモリー（128bitアラインメント)

[返り値]
        フォント識別子(0>エラー)

[解説]
        フォントを初期化します。
        scePFontCalcCacheSizeにより計算した十分なメモリーを確保して渡して
        下さい。
        scePFontRelease()をするまで内部で保持し続けます。

===========================================================================
scePFontPutc                                                         [関数]
===========================================================================
                                                                 １文字出力
[形式]
        int scePFontPutc(
                int fd, 
                sceVif1Packet* pPacket,
                int size,
                int chr
        );

[引数]
        fd       識別子
        packet   初期化済みパケット
        size     最大パケットサイズ(qwc)
        chr      出力文字（UCS2）

[返り値]
        成功の場合、0を返す。
        失敗の場合、-1を返す。（パケットに空きがない）

[解説]
        １文字出力します。
        パケットはcntで付けられ閉じられます。
        アルファはonで描画されます。
        コンテキスト１が使用されます。
        ALPHA_0とTEST_0は外部で設定してください。

===========================================================================
scePFontPuts                                                         [関数]
===========================================================================
                                                                 文字列出力
[形式]
        int scePFontPuts(
                int fd,
                sceVif1Packet* pPacket,
                int size,
                char const* str
        );

[引数]
        fd       識別子
        packet   初期化済みパケット
        size     最大パケットサイズ(qwc)
        str      文字列

[返り値]
        +----+----------------------+
        | 値 | 結果                 |
        +====+======================+
        | 0  | 終了                 |
        +----+----------------------+
        | 1  | 続きがある           |
        +----+----------------------+
        | -1 | パケットが小さすぎる |
        +----+----------------------+

[解説]
        文字列をパケット化して出力します。

===========================================================================
scePFontPutsContinue                                                 [関数]
===========================================================================
                                                         文字列の続きを出力
[形式]
        int scePFontPutsContinue(
                int fd,
                sceVif1Packet* pPacket,
                int size
        );

[引数]
        fd       識別子
        packet   初期化済みパケット
        size     最大パケットサイズ(qwc)

[返り値]
        +----+----------------------+
        | 値 | 結果                 |
        +====+======================+
        | 0  | 終了                 |
        +----+----------------------+
        | 1  | 続きがある           |
        +----+----------------------+
        | -1 | パケットが小さすぎる |
        +----+----------------------+

[解説]
        scePFontPuts()で出力できなかった文字列の続きを出力します。
        scePFontPuts() の戻り値が１だった場合、パケットが一杯になって表示
        しきれなかったことを表しているので、この関数をコールしてください。

===========================================================================
scePFontRelease                                                      [関数]
===========================================================================
                                                       フォントリソース解放
[形式]
        void scePFontRelease(
                int fd
        );

[引数]
        fd   識別子

[返り値]
        なし

[解説]
        フォントリソースを解放し、関連づけを破棄します。

===========================================================================
scePFontSetColor                                                     [関数]
===========================================================================
                                                                 描画色設定
[形式]
        void scePFontSetColor(
                int fd, 
                sceVu0FVECTOR const* pColor
        );

[引数]
        fd       識別子
        pColor   色

[返り値]
        なし

[解説]
        描画色を設定します。（元の文字の色に乗算される）

===========================================================================
scePFontSetFilter                                                    [関数]
===========================================================================
                                                         フィルター関数設定
[形式]
        void scePFontSetFilter(
                int fd,
                int (*filter)(int fd, scePFontControl* pCtrl));

[引数]
        fd       識別子
        filter   フィルター関数へのポインタ。
                 NULLを渡すとデフォルト実装。

[返り値]
        なし

[解説]
        フィルター関数設定を設定します。
        scePFontPuts, scePFontPutsContinue, scePFontCalcRectから呼ばれます。

        デフォルトフィルター関数

        fd       識別子
        pCtrl    フォント制御用構造体
        return   0=終了, 1=続きがある, -1=パケットが小さすぎる

            int default_filter(int fd, scePFontControl* pCtrl){
                    int stat = -1;
                    int c;
                    while(0 < (c = pCtrl->Getc(fd))){
                        if(-1 == pCtrl->Putc(fd, c)){
                            pCtrl->Ungetc(fd);
                            return stat;
                        }
                        stat = 1;
                    };
                    return 0;
            }
            [eof]

===========================================================================
scePFontSetFontMatrix                                                [関数]
===========================================================================
                                                       変形マトリクスの設定
[形式]
        void scePFontSetFontMatrix(
                int fd,
                sceVu0FMATRIX const* pMatrix
        );

[引数]
        fd        識別子
        pMatrix   変形マトリクスへのポインタ

[返り値]
        なし

[解説]
        変形マトリクスを設定します。文字単位のスケーリング・回転・移動に使
        用します。

===========================================================================
scePFontSetGsCtxt                                                    [関数]
===========================================================================
                                             GSパケットのコンテキストを指定
[形式]
        int scePFontSetGsCtxt(
                int fd,
                int ctxt
        );

[引数]
        fd     識別子
        ctxt   GSコンテキスト 0or1（デフォルトは０）

[返り値]
        以前の値を返します。

[解説]
        GSパケットのコンテキストを指定します。

===========================================================================
scePFontSetLocate                                                    [関数]
===========================================================================
                                                           描画開始位置設定
[形式]
        void scePFontSetLocate(
                int fd, 
                sceVu0FVECTOR const* pLocate
        );

[引数]
        fd        識別子
        pLocate   描画位置

[返り値]
        なし

[解説]
        描画開始位置を設定します。

===========================================================================
scePFontSetPitch                                                     [関数]
===========================================================================
                                                       字間（ピッチ）を設定
[形式]
        void scePFontSetPitch(
                int fd,
                float pitch
        );

[引数]
        fd      識別子
        pitch   pitch

[返り値]
        なし

[解説]
        字間（ピッチ）を設定します。

===========================================================================
scePFontSetScreenMatrix                                              [関数]
===========================================================================
                                                   座標変換マトリクスの設定
[形式]
        void scePFontSetScreenMatrix(
                int fd,
                sceVu0FMATRIX const* pMatrix
        );

[引数]
        fd        識別子
        pMatrix   座標変換マトリクスへのポインタ

[返り値]
        なし

[解説]
        座標変換マトリクスを設定します。(ローカル座標→スクリーン座標）

===========================================================================
scePFontSetTexMem                                                    [関数]
===========================================================================
                                           テクスチャ転送用のGSメモリー設定
[形式]
        void scePFontSetTexMem(
                int fd,
                u_int tbp,
                u_int size,
                u_int cbp
        );

[引数]
        fd     識別子
        tbp    GSのワードアドレス
        size   GSメモリーのワード数(2048ワードの倍数)
        cbp    32bitCLUT用ワードアドレス(256エントリ分必要)

[返り値]
        なし

[解説]
        テクスチャ転送用のGSメモリーを設定します。
        １文字の転送に満たない場合の動作は保証しません。
        このメモリーの情報を破壊した場合scePFontFlush()で無効化して下さい。

===========================================================================
scePFontSetWidth                                                     [関数]
===========================================================================
                                                       計算上の文字幅を設定
[形式]
        void scePFontSetWidth(
                int fd,
                short width
        );

[引数]
        fd      識別子
        width   0=デフォルト 1<=固定文字幅

[返り値]
        なし

[解説]
        計算上の文字幅を設定します。1文字の表示幅は変わりません。
        たとえばこの値を1文字の幅よりも小さくすると、次の文字が前の文字に
        重なって表示されることになります
