[SCE CONFIDENTIAL DOCUMENT]
"PlayStation 2" Programmer Tool Runtime Library libccc Version 1.1
                Copyright (C) 2003 Sony Computer Entertainment Inc.
                                                   All Rights Reserved

『文字コード変換ライブラリ ver. 1.1』

< 型 >

・sceCccJISCS
        16bitで表されるJIS X 0213の文字集合。
        ビット15が面。ビット8~14に区+0x20の値、ビット0~7に点+0x20の値。

・sceCccSJISCS
        16bitで表されるSJISの文字集合。

・sceCccUCS2;
        16bitで表されるunicodeの文字集合。

・sceCccUCS4;
        32bitで表されるunicodeの文字集合。

・sceCccJISTF;
        JIS符合化形式。
        '0x00U'が終端コード。

・sceCccSJISTF;
        SJIS符合化形式。
        '0x00U'が終端コード。

・sceCccUTF8;
        unicodeの8bit符合化形式。
        '0x00U'が終端コード。

・sceCccUTF16;
        unicodeの16bit符合化形式。
        '0x0000U'が終端コード。

関数
========

=========================================================================
sceCccSetTable                                                     [関数]
=========================================================================
                                       JIS,UCS,文字コード変換テーブル設定
[形式]
        void sceCccSetTable(
                sceCccUCS2 const* jis2ucs,
                sceCccJISCS const* ucs2jis
        );
        
[引数]
        jis2ucs : jis から ucs2 への対応表(jis並び)のポインタ
        ucs2jis : ucs2 から jis への対応表(ucs2並び)のポインタ

[返り値]
        なし
        
[解説]
        JISとUCSの文字コードを相互に変換するためのテーブルを設定。
        文字列変換などのさいには必ず設定する必要があります。
        テーブルサイズは65536個。UCS2を越える範囲はサポートしない。

=========================================================================
sceCccStrlenUTF16                                                  [関数]
=========================================================================
                                                      UTF16文字数カウント
[形式]
        int sceCccStrlenUTF16(
                sceCccUTF16 const* str
        );
        
[引数]
        str : UTF16文字列
        
[返り値]
        文字数
        
[解説]
        UTF16の文字列に含まれる文字を数える。

=========================================================================
sceCccStrlenUTF8                                                   [関数]
=========================================================================
                                                        UTF8文字数カウント
[形式]
        int sceCccStrlenUTF8(
                sceCccUTF8 const* str
        );
        
[引数]
        str : UTF8文字列
        
[返り値]
        文字数
        
[解説]
        UTF8の文字列に含まれる文字を数える。

=========================================================================
sceCccStrlenSJIS                                                   [関数]
=========================================================================
                                                        SJIS文字数カウント
[形式]
        int sceCccStrlenSJIS(
                sceCccSJISTF const* str
        );
        
[引数]
        str : SJIS文字列
        
[返り値]
        文字数
        
[解説]
        UTF8の文字列に含まれる文字を数える。

=========================================================================
sceCccDecodeUTF16                                                  [関数]
=========================================================================
                                               符号化文字列から１文字復号
[形式]
        sceCccUCS4 sceCccDecodeUTF16(
                sceCccUTF16 const** str
        );
        
[引数]
        str : 復号位置のポインタ。復号後は一文字分進む。
        
[返り値]
        文字コード
        
[解説]
        UTF16符号化文字列からUCS4の文字コードを取得。

=========================================================================
sceCccDecodeUTF8                                                   [関数]
=========================================================================
                                               符号化文字列から１文字復号
[形式]
        sceCccUCS4 sceCccDecodeUTF8(
                sceCccUTF8 const** str
        );
        
[引数]
        str : 復号位置のポインタ。復号後は一文字分進む。
        
[返り値]
        文字コード
        
[解説]
        UTF8符号化文字列からUCS4の文字コードを取得。

=========================================================================
sceCccDecodeSJIS                                                   [関数]
=========================================================================
                                               符号化文字列から１文字復号
[形式]
        sceCccJISCS sceCccDecodeSJIS(
                sceCccSJISTF const** str
        );
        
[引数]
        str : 復号位置のポインタ。復号後は一文字分進む。
        
[返り値]
        文字コード
        
[解説]
        SJIS符号化文字列からJISの文字コードを取得。

=========================================================================
sceCccEncodeUTF16                                                  [関数]
=========================================================================
                                                       文字コードを符号化
[形式]
        sceCccUCS4 sceCccEncodeUTF16(
                sceCccUTF16 const** str
        );
        
[引数]
        str : 符号位置のポインタ。符号後は一文字分進む。
        
[返り値]
        文字コード
        
[解説]
        UCS4文字コードをUTF16符号化。

=========================================================================
sceCccEncodeUTF8                                                   [関数]
=========================================================================
                                                       文字コードを符号化
[形式]
        sceCccUCS4 sceCccEncodeUTF8(
                sceCccUTF8 const** str
        );
        
[引数]
        str : 符号位置のポインタ。符号後は一文字分進む。
        
[返り値]
        文字コード
        
[解説]
        UCS4文字コードをUTF8符号化。

=========================================================================
sceCccEncodeSJIS                                                   [関数]
=========================================================================
                                                       文字コードを符号化
[形式]
        sceCccJISCS sceCccEncodeSJIS(
                sceCccSJISTF const** str
        );
        
[引数]
        str : 符号位置のポインタ。符号後は一文字分進む。
        
[返り値]
        文字コード
        
[解説]
        JIS文字コードをSJIS符号化。

=========================================================================
sceCccUCStoJIS                                                     [関数]
=========================================================================
                                                           文字コード変換
[形式]
        sceCccJISCS sceCccUCStoJIS(
                sceCccUCS4 code, 
                sceCccJISCS chr
        );
        
[引数]
        code : 文字コード
        chr : 変換に失敗したときに出力されるキャラクタ(default:0)
        
[返り値]
        変換後のコード
        
[解説]
        UCS4文字コードをJIS文字コードへ変換。
        変換不可能な場合chrを返す。
=========================================================================
sceCccJIStoUCS                                                     [関数]
=========================================================================
                                                           文字コード変換
[形式]
        sceCccUCS4 sceCccJIStoUCS(
                sceCccJISCS code, 
                sceCccUCS4 chr
        );
        
[引数]
        code : 文字コード
        chr : 変換に失敗したときに出力されるキャラクタ(default:0)
        
[返り値]
        変換後のコード
        
[解説]
        JIS文字コードをUCS4文字コードへ変換。
        変換不可能な場合chrを返す。

=========================================================================
sceCccUTF8toUTF16                                                  [関数]
=========================================================================
                                                       文字列符合方式変換
[形式]
        int sceCccUTF8toUTF16(
                sceCccUTF16* dst,
                size_t count,
                sceCccUTF8 const* str
);
        
[引数]
        dst : 出力文字列
        count : 出力バッファサイズ
        str : 入力文字列
        
[返り値]
        変換後の文字数
        
[解説]
        UTF8文字列をUTF16文字列へ変換。

=========================================================================
sceCccUTF8toSJIS                                                   [関数]
=========================================================================
                                                       文字列符合方式変換
[形式]
        int sceCccUTF8toSJIS(
                sceCccSJISTF* dst, 
                size_t count,
                sceCccUTF8 const* str
        );
        
[引数]
        dst : 出力文字列
        count : 出力バッファサイズ
        str : 入力文字列
        
[返り値]
        変換後の文字数
        
[解説]
        UTF8文字列をSJIS符号化文字列へ変換。

=========================================================================
sceCccSJIStoUTF8                                                   [関数]
=========================================================================
                                                       文字列符合方式変換
[形式]
        int sceCccSJIStoUTF8(
                sceCccUTF8* dst, 
                size_t count,
                sceCccSJISTF const* str
        );
        
[引数]
        dst : 出力文字列
        count : 出力バッファサイズ
        str : 入力文字列
        
[返り値]
        変換後の文字数
        
[解説]
        SJIS符号化文字列をUTF8文字列へ変換。

=========================================================================
sceCccSJIStoUTF16                                                  [関数]
=========================================================================
                                                       文字列符合方式変換
[形式]
        int sceCccSJIStoUTF16(
                sceCccUTF16* dst, 
                size_t count,
                sceCccSJISTF const* str
        );
        
[引数]
        dst : 出力文字列
        count : 出力バッファサイズ
        str : 入力文字列
        
[返り値]
        変換後の文字数
        
[解説]
        SJIS符号化文字列をUTF16文字列へ変換。

=========================================================================
sceCccUTF16toUTF8                                                  [関数]
=========================================================================
                                                       文字列符合方式変換
[形式]
        int sceCccUTF16toUTF8(
                sceCccUTF8* dst, 
                size_t count,
                sceCccUTF16 const* str
        );
        
[引数]
        dst : 出力文字列
        count : 出力バッファサイズ
        str : 入力文字列
        
[返り値]
        変換後の文字数
        
[解説]
        UTF16文字列をUTF8文字列へ変換。

=========================================================================
sceCccUTF16toSJIS                                                  [関数]
=========================================================================
                                                       文字列符合方式変換
[形式]
        int sceCccUTF16toSJIS(
                sceCccSJISTF* dst, 
                size_t count,
                sceCccUTF16 const* str
        );
        
[引数]
        dst : 出力文字列
        count : 出力バッファサイズ
        str : 入力文字列
        
[返り値]
        変換後の文字数
        
[解説]
        UTF16文字列をSJIS符号化文字列へ変換。

=========================================================================
sceCccSetErrorCharSJIS                                             [関数]
=========================================================================
                         文字列変換時の無効データ置き換え用キャラクタ設定
[形式]
        sceCccJISCS sceCccSetErrorCharSJIS(
                sceCccJISCS chr
        );
        
[引数]
        chr : キャラクタ
        
[返り値]
        以前に設定されていたコード
        
[解説]
        SJIS符号化文字列への変換に失敗した場合の文字コードを設定。

=========================================================================
sceCccSetErrorCharUTF8                                             [関数]
=========================================================================
                         文字列変換時の無効データ置き換え用キャラクタ設定
[形式]
        sceCccUCS4 sceCccSetErrorCharUTF8(
                sceCccUCS4 chr
        );
        
[引数]
        chr : キャラクタ
        
[返り値]
        以前に設定されていたコード
        
[解説]
        UTF8文字列への変換に失敗した場合の文字コードを設定。

=========================================================================
sceCccSetErrorCharUTF16                                            [関数]
=========================================================================
                         文字列変換時の無効データ置き換え用キャラクタ設定
[形式]
        sceCccUCS4 sceCccSetErrorCharUTF16(
                sceCccUCS4 chr
        );
        
[引数]
        chr : キャラクタ
        
[返り値]
        以前に設定されていたコード
        
[解説]
        UTF16文字列への変換に失敗した場合の文字コードを設定。


=========================================================================
sceCccIsValidUCS4                                                  [関数]
=========================================================================
                                                   文字コードの有効性検証
[形式]
        int sceCccIsValidUCS4(
                sceCccUCS4 code
        );

[引数]
        code : 文字コード

[返り値]
        1=有効 0:無効
        
[解説]
        codeがUCS4として有効か検証する。
        注）現在は厳密なチェックを行なっていません。

=========================================================================
sceCccIsValidUCS2                                                  [関数]
=========================================================================
                                                   文字コードの有効性検証
[形式]
        int sceCccIsValidUCS2(
                sceCccUCS4 code
        );

[引数]
        code : 文字コード

[返り値]
         1=有効 0:無効
        
[解説]
        codeがUCS2として有効か検証する。
        注）現在は厳密なチェックを行なっていません。

=========================================================================
sceCccIsValidJIS                                                   [関数]
=========================================================================
                                                   文字コードの有効性検証
[形式]
        int sceCccIsValidJIS(
                sceCccJISCS code
        );

[引数]
        code : 文字コード

[返り値]
        1=有効 0:無効
        
[解説]
        codeがJISとして有効か検証する。
        注）現在は厳密なチェックを行なっていません。


=========================================================================
sceCccIsValidUTF8                                                  [関数]
=========================================================================
                                                   文字コードの有効性検証
[形式]
        int sceCccIsValidUTF8(
                sceCccUCS4 code
        );

[引数]
        code : 文字コード

[返り値]
        1=有効 0:無効
        
[解説]
        codeがUTF8に有効な文字か検証する。
        注）現在は厳密なチェックを行なっていません。

=========================================================================
sceCccIsValidUTF16                                                 [関数]
=========================================================================
                                                   文字コードの有効性検証
[形式]
        int sceCccIsValidUTF16(
                sceCccUCS4 code
        );

[引数]
        code : 文字コード

[返り値]
        1=有効 0:無効
        
[解説]
        codeがUTF16に有効な文字か検証する。
        注）現在は厳密なチェックを行なっていません。

=========================================================================
sceCccIsValidSJIS                                                  [関数]
=========================================================================
                                                   文字コードの有効性検証
[形式]
        int sceCccIsValidSJIS(sceCccSJISTF code);

[引数]
        code : 文字コード

[返り値]
        1=有効 0:無効
        
[解説]
        codeがSJISに有効な文字か検証する。
        注）現在は厳密なチェックを行なっていません。

=========================================================================
sceCccGetErxEntries                                                [関数]
=========================================================================
                                                ライブラリのエントリの取得
[形式]
        void *sceCccGetErxEntries(
                void
        );

[呼出条件]
        割り込みハンドラから呼び出し不可
        スレッドから呼び出し可能
        マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）

[引数]
        なし

[返り値]
        libcccのエントリライブラリを返します。
        
[解説]
        libcccをliberxに登録するために必要なSceErxLibraryHeader構造体へのポ
        インタを取得します。
        この関数により返されたSceErxLibraryHeader構造体をliberxの
        sceErxRegisterLibraryEntries()関数に渡すことにより、スタティックリ
        ンクされたlibcccをERXモジュールから呼び出し可能（ダイナミックリンク
        可能）な状態になります。また、この関数をリンクするとliberxのライブ
        ラリエントリテーブル経由でlibcccの実装全体がリンクされることになり
        ます。場合によってプログラムサイズが大きくなる可能性があります。

[関連項目]
        sceErxInit()


